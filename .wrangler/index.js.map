{
  "version": 3,
  "sources": ["../node_modules/resend/dist/index.mjs", "../worker/index.ts"],
  "sourceRoot": ".wrangler",
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// package.json\nvar version = \"6.1.2\";\n\n// src/common/utils/build-pagination-query.ts\nfunction buildPaginationQuery(options) {\n  const searchParams = new URLSearchParams();\n  if (options.limit !== void 0) {\n    searchParams.set(\"limit\", options.limit.toString());\n  }\n  if (\"after\" in options && options.after !== void 0) {\n    searchParams.set(\"after\", options.after);\n  }\n  if (\"before\" in options && options.before !== void 0) {\n    searchParams.set(\"before\", options.before);\n  }\n  return searchParams.toString();\n}\n\n// src/api-keys/api-keys.ts\nvar ApiKeys = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      const data = yield this.resend.post(\n        \"/api-keys\",\n        payload,\n        options\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/api-keys?${queryString}` : \"/api-keys\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  remove(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.delete(\n        `/api-keys/${id}`\n      );\n      return data;\n    });\n  }\n};\n\n// src/audiences/audiences.ts\nvar Audiences = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      const data = yield this.resend.post(\n        \"/audiences\",\n        payload,\n        options\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/audiences?${queryString}` : \"/audiences\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  get(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.get(\n        `/audiences/${id}`\n      );\n      return data;\n    });\n  }\n  remove(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.delete(\n        `/audiences/${id}`\n      );\n      return data;\n    });\n  }\n};\n\n// src/common/utils/parse-email-to-api-options.ts\nfunction parseAttachments(attachments) {\n  return attachments == null ? void 0 : attachments.map((attachment) => ({\n    content: attachment.content,\n    filename: attachment.filename,\n    path: attachment.path,\n    content_type: attachment.contentType,\n    content_id: attachment.contentId\n  }));\n}\nfunction parseEmailToApiOptions(email) {\n  return {\n    attachments: parseAttachments(email.attachments),\n    bcc: email.bcc,\n    cc: email.cc,\n    from: email.from,\n    headers: email.headers,\n    html: email.html,\n    reply_to: email.replyTo,\n    scheduled_at: email.scheduledAt,\n    subject: email.subject,\n    tags: email.tags,\n    text: email.text,\n    to: email.to\n  };\n}\n\n// src/render.ts\nfunction render(node) {\n  return new Promise((resolve, reject) => {\n    import(\"@react-email/render\").then(({ render: render2 }) => {\n      resolve(render2(node));\n    }).catch(() => {\n      reject(\n        Error(\n          \"Failed to render React component. Make sure to install `@react-email/render` or `@react-email/components`.\"\n        )\n      );\n    });\n  });\n}\n\n// src/batch/batch.ts\nvar Batch = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  send(payload, options) {\n    return __async(this, null, function* () {\n      return this.create(payload, options);\n    });\n  }\n  create(payload, options) {\n    return __async(this, null, function* () {\n      var _a;\n      const emails = [];\n      for (const email of payload) {\n        if (email.react) {\n          email.html = yield render(email.react);\n          email.react = void 0;\n        }\n        emails.push(parseEmailToApiOptions(email));\n      }\n      const data = yield this.resend.post(\n        \"/emails/batch\",\n        emails,\n        __spreadProps(__spreadValues({}, options), {\n          headers: __spreadValues({\n            \"x-batch-validation\": (_a = options == null ? void 0 : options.batchValidation) != null ? _a : \"strict\"\n          }, options == null ? void 0 : options.headers)\n        })\n      );\n      return data;\n    });\n  }\n};\n\n// src/broadcasts/broadcasts.ts\nvar Broadcasts = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      if (payload.react) {\n        payload.html = yield render(payload.react);\n      }\n      const data = yield this.resend.post(\n        \"/broadcasts\",\n        {\n          name: payload.name,\n          audience_id: payload.audienceId,\n          preview_text: payload.previewText,\n          from: payload.from,\n          html: payload.html,\n          reply_to: payload.replyTo,\n          subject: payload.subject,\n          text: payload.text\n        },\n        options\n      );\n      return data;\n    });\n  }\n  send(id, payload) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.post(\n        `/broadcasts/${id}/send`,\n        { scheduled_at: payload == null ? void 0 : payload.scheduledAt }\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/broadcasts?${queryString}` : \"/broadcasts\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  get(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.get(\n        `/broadcasts/${id}`\n      );\n      return data;\n    });\n  }\n  remove(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.delete(\n        `/broadcasts/${id}`\n      );\n      return data;\n    });\n  }\n  update(id, payload) {\n    return __async(this, null, function* () {\n      if (payload.react) {\n        payload.html = yield render(payload.react);\n      }\n      const data = yield this.resend.patch(\n        `/broadcasts/${id}`,\n        {\n          name: payload.name,\n          audience_id: payload.audienceId,\n          from: payload.from,\n          html: payload.html,\n          text: payload.text,\n          subject: payload.subject,\n          reply_to: payload.replyTo,\n          preview_text: payload.previewText\n        }\n      );\n      return data;\n    });\n  }\n};\n\n// src/contacts/contacts.ts\nvar Contacts = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      const data = yield this.resend.post(\n        `/audiences/${payload.audienceId}/contacts`,\n        {\n          unsubscribed: payload.unsubscribed,\n          email: payload.email,\n          first_name: payload.firstName,\n          last_name: payload.lastName\n        },\n        options\n      );\n      return data;\n    });\n  }\n  list(options) {\n    return __async(this, null, function* () {\n      const _a = options, { audienceId } = _a, paginationOptions = __objRest(_a, [\"audienceId\"]);\n      const queryString = buildPaginationQuery(paginationOptions);\n      const url = queryString ? `/audiences/${audienceId}/contacts?${queryString}` : `/audiences/${audienceId}/contacts`;\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  get(options) {\n    return __async(this, null, function* () {\n      if (!options.id && !options.email) {\n        return {\n          data: null,\n          error: {\n            message: \"Missing `id` or `email` field.\",\n            name: \"missing_required_field\"\n          }\n        };\n      }\n      const data = yield this.resend.get(\n        `/audiences/${options.audienceId}/contacts/${(options == null ? void 0 : options.email) ? options == null ? void 0 : options.email : options == null ? void 0 : options.id}`\n      );\n      return data;\n    });\n  }\n  update(options) {\n    return __async(this, null, function* () {\n      if (!options.id && !options.email) {\n        return {\n          data: null,\n          error: {\n            message: \"Missing `id` or `email` field.\",\n            name: \"missing_required_field\"\n          }\n        };\n      }\n      const data = yield this.resend.patch(\n        `/audiences/${options.audienceId}/contacts/${(options == null ? void 0 : options.email) ? options == null ? void 0 : options.email : options == null ? void 0 : options.id}`,\n        {\n          unsubscribed: options.unsubscribed,\n          first_name: options.firstName,\n          last_name: options.lastName\n        }\n      );\n      return data;\n    });\n  }\n  remove(payload) {\n    return __async(this, null, function* () {\n      if (!payload.id && !payload.email) {\n        return {\n          data: null,\n          error: {\n            message: \"Missing `id` or `email` field.\",\n            name: \"missing_required_field\"\n          }\n        };\n      }\n      const data = yield this.resend.delete(\n        `/audiences/${payload.audienceId}/contacts/${(payload == null ? void 0 : payload.email) ? payload == null ? void 0 : payload.email : payload == null ? void 0 : payload.id}`\n      );\n      return data;\n    });\n  }\n};\n\n// src/common/utils/parse-domain-to-api-options.ts\nfunction parseDomainToApiOptions(domain) {\n  return {\n    name: domain.name,\n    region: domain.region,\n    custom_return_path: domain.customReturnPath\n  };\n}\n\n// src/domains/domains.ts\nvar Domains = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      const data = yield this.resend.post(\n        \"/domains\",\n        parseDomainToApiOptions(payload),\n        options\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/domains?${queryString}` : \"/domains\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  get(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.get(\n        `/domains/${id}`\n      );\n      return data;\n    });\n  }\n  update(payload) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.patch(\n        `/domains/${payload.id}`,\n        {\n          click_tracking: payload.clickTracking,\n          open_tracking: payload.openTracking,\n          tls: payload.tls\n        }\n      );\n      return data;\n    });\n  }\n  remove(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.delete(\n        `/domains/${id}`\n      );\n      return data;\n    });\n  }\n  verify(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.post(\n        `/domains/${id}/verify`\n      );\n      return data;\n    });\n  }\n};\n\n// src/emails/emails.ts\nvar Emails = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  send(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      return this.create(payload, options);\n    });\n  }\n  create(_0) {\n    return __async(this, arguments, function* (payload, options = {}) {\n      if (payload.react) {\n        payload.html = yield render(payload.react);\n      }\n      const data = yield this.resend.post(\n        \"/emails\",\n        parseEmailToApiOptions(payload),\n        options\n      );\n      return data;\n    });\n  }\n  get(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.get(\n        `/emails/${id}`\n      );\n      return data;\n    });\n  }\n  list() {\n    return __async(this, arguments, function* (options = {}) {\n      const queryString = buildPaginationQuery(options);\n      const url = queryString ? `/emails?${queryString}` : \"/emails\";\n      const data = yield this.resend.get(url);\n      return data;\n    });\n  }\n  update(payload) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.patch(\n        `/emails/${payload.id}`,\n        {\n          scheduled_at: payload.scheduledAt\n        }\n      );\n      return data;\n    });\n  }\n  cancel(id) {\n    return __async(this, null, function* () {\n      const data = yield this.resend.post(\n        `/emails/${id}/cancel`\n      );\n      return data;\n    });\n  }\n};\n\n// src/resend.ts\nvar defaultBaseUrl = \"https://api.resend.com\";\nvar defaultUserAgent = `resend-node:${version}`;\nvar baseUrl = typeof process !== \"undefined\" && process.env ? process.env.RESEND_BASE_URL || defaultBaseUrl : defaultBaseUrl;\nvar userAgent = typeof process !== \"undefined\" && process.env ? process.env.RESEND_USER_AGENT || defaultUserAgent : defaultUserAgent;\nvar Resend = class {\n  constructor(key) {\n    this.key = key;\n    this.apiKeys = new ApiKeys(this);\n    this.audiences = new Audiences(this);\n    this.batch = new Batch(this);\n    this.broadcasts = new Broadcasts(this);\n    this.contacts = new Contacts(this);\n    this.domains = new Domains(this);\n    this.emails = new Emails(this);\n    if (!key) {\n      if (typeof process !== \"undefined\" && process.env) {\n        this.key = process.env.RESEND_API_KEY;\n      }\n      if (!this.key) {\n        throw new Error(\n          'Missing API key. Pass it to the constructor `new Resend(\"re_123\")`'\n        );\n      }\n    }\n    this.headers = new Headers({\n      Authorization: `Bearer ${this.key}`,\n      \"User-Agent\": userAgent,\n      \"Content-Type\": \"application/json\"\n    });\n  }\n  fetchRequest(_0) {\n    return __async(this, arguments, function* (path, options = {}) {\n      try {\n        const response = yield fetch(`${baseUrl}${path}`, options);\n        if (!response.ok) {\n          try {\n            const rawError = yield response.text();\n            return { data: null, error: JSON.parse(rawError) };\n          } catch (err) {\n            if (err instanceof SyntaxError) {\n              return {\n                data: null,\n                error: {\n                  name: \"application_error\",\n                  message: \"Internal server error. We are unable to process your request right now, please try again later.\"\n                }\n              };\n            }\n            const error = {\n              message: response.statusText,\n              name: \"application_error\"\n            };\n            if (err instanceof Error) {\n              return { data: null, error: __spreadProps(__spreadValues({}, error), { message: err.message }) };\n            }\n            return { data: null, error };\n          }\n        }\n        const data = yield response.json();\n        return { data, error: null };\n      } catch (e) {\n        return {\n          data: null,\n          error: {\n            name: \"application_error\",\n            message: \"Unable to fetch data. The request could not be resolved.\"\n          }\n        };\n      }\n    });\n  }\n  post(_0, _1) {\n    return __async(this, arguments, function* (path, entity, options = {}) {\n      const headers = new Headers(this.headers);\n      if (options.headers) {\n        for (const [key, value] of new Headers(options.headers).entries()) {\n          headers.set(key, value);\n        }\n      }\n      if (options.idempotencyKey) {\n        headers.set(\"Idempotency-Key\", options.idempotencyKey);\n      }\n      const requestOptions = __spreadProps(__spreadValues({\n        method: \"POST\",\n        body: JSON.stringify(entity)\n      }, options), {\n        headers\n      });\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n  get(_0) {\n    return __async(this, arguments, function* (path, options = {}) {\n      const headers = new Headers(this.headers);\n      if (options.headers) {\n        for (const [key, value] of new Headers(options.headers).entries()) {\n          headers.set(key, value);\n        }\n      }\n      const requestOptions = __spreadProps(__spreadValues({\n        method: \"GET\"\n      }, options), {\n        headers\n      });\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n  put(_0, _1) {\n    return __async(this, arguments, function* (path, entity, options = {}) {\n      const headers = new Headers(this.headers);\n      if (options.headers) {\n        for (const [key, value] of new Headers(options.headers).entries()) {\n          headers.set(key, value);\n        }\n      }\n      const requestOptions = __spreadProps(__spreadValues({\n        method: \"PUT\",\n        body: JSON.stringify(entity)\n      }, options), {\n        headers\n      });\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n  patch(_0, _1) {\n    return __async(this, arguments, function* (path, entity, options = {}) {\n      const headers = new Headers(this.headers);\n      if (options.headers) {\n        for (const [key, value] of new Headers(options.headers).entries()) {\n          headers.set(key, value);\n        }\n      }\n      const requestOptions = __spreadProps(__spreadValues({\n        method: \"PATCH\",\n        body: JSON.stringify(entity)\n      }, options), {\n        headers\n      });\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n  delete(path, query) {\n    return __async(this, null, function* () {\n      const requestOptions = {\n        method: \"DELETE\",\n        body: JSON.stringify(query),\n        headers: this.headers\n      };\n      return this.fetchRequest(path, requestOptions);\n    });\n  }\n};\nexport {\n  Resend\n};\n", "import { Resend } from 'resend';\n\ninterface Env {\n  ASSETS: Fetcher;\n  RESEND_API_KEY: string;\n  TURNSTILE_SECRET_KEY: string;\n}\n\ninterface ContactFormData {\n  name: string;\n  email: string;\n  phone?: string;\n  company?: string;\n  message: string;\n  captchaToken: string;\n}\n\nconst corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type',\n};\n\nasync function handleContactSubmission(data: ContactFormData, env: Env): Promise<Response> {\n  if (!data.name || !data.email || !data.message) {\n    return new Response(\n      JSON.stringify({ success: false, error: 'Name, email, and message are required' }),\n      {\n        status: 400,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      }\n    );\n  }\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(data.email)) {\n    return new Response(\n      JSON.stringify({ success: false, error: 'Invalid email address' }),\n      {\n        status: 400,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      }\n    );\n  }\n\n  if (!data.captchaToken) {\n    return new Response(\n      JSON.stringify({ success: false, error: 'CAPTCHA verification required' }),\n      {\n        status: 400,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      }\n    );\n  }\n\n  if (!env.TURNSTILE_SECRET_KEY) {\n    console.error('TURNSTILE_SECRET_KEY not configured');\n    return new Response(\n      JSON.stringify({ success: false, error: 'Server configuration error' }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      }\n    );\n  }\n\n  const turnstileResponse = await fetch(\n    'https://challenges.cloudflare.com/turnstile/v0/siteverify',\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        secret: env.TURNSTILE_SECRET_KEY,\n        response: data.captchaToken,\n      }),\n    }\n  );\n\n  const turnstileResult: any = await turnstileResponse.json();\n\n  if (!turnstileResult.success) {\n    console.error('Turnstile verification failed:', turnstileResult);\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: 'CAPTCHA verification failed',\n        details: turnstileResult['error-codes'] || [],\n      }),\n      {\n        status: 400,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      }\n    );\n  }\n\n  if (!env.RESEND_API_KEY) {\n    console.error('RESEND_API_KEY not configured');\n    return new Response(\n      JSON.stringify({ success: false, error: 'Server configuration error' }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      }\n    );\n  }\n\n  const resend = new Resend(env.RESEND_API_KEY);\n\n  try {\n    const emailResult = await resend.emails.send({\n      from: 'United Acquisitions Contact Form <noreply@notifications.unitedacq.com>',\n      to: ['info@unitedacq.com'],\n      subject: `New Contact Form Submission from ${data.name}`,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n          <h2 style=\"color: #2A5F9E; border-bottom: 2px solid #E5C93C; padding-bottom: 10px;\">\n            New Contact Form Submission\n          </h2>\n\n          <div style=\"background-color: #f9f9f9; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n            <h3 style=\"color: #2A5F9E; margin-top: 0;\">Contact Information</h3>\n            <p><strong>Name:</strong> ${data.name}</p>\n            <p><strong>Email:</strong> <a href=\"mailto:${data.email}\">${data.email}</a></p>\n            ${data.phone ? `<p><strong>Phone:</strong> <a href=\"tel:${data.phone}\">${data.phone}</a></p>` : ''}\n            ${data.company ? `<p><strong>Company:</strong> ${data.company}</p>` : ''}\n          </div>\n\n          <div style=\"background-color: #fff; padding: 20px; border: 1px solid #ddd; border-radius: 8px;\">\n            <h3 style=\"color: #2A5F9E; margin-top: 0;\">Message</h3>\n            <p style=\"white-space: pre-wrap; line-height: 1.6;\">${data.message}</p>\n          </div>\n\n          <div style=\"margin-top: 20px; padding: 15px; background-color: #E6EBF2; border-radius: 8px; font-size: 12px; color: #666;\">\n            <p style=\"margin: 0;\"><strong>Submission Details:</strong></p>\n            <p style=\"margin: 5px 0 0 0;\">Time: ${new Date().toLocaleString()}</p>\n            <p style=\"margin: 5px 0 0 0;\">CAPTCHA Verified: \u2713</p>\n          </div>\n        </div>\n      `,\n      text: `\nNew Contact Form Submission\n\nName: ${data.name}\nEmail: ${data.email}\n${data.phone ? `Phone: ${data.phone}` : ''}\n${data.company ? `Company: ${data.company}` : ''}\n\nMessage:\n${data.message}\n\nSubmitted: ${new Date().toLocaleString()}\n      `,\n    });\n\n    return new Response(\n      JSON.stringify({ success: true, data: emailResult }),\n      {\n        status: 200,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      }\n    );\n  } catch (error) {\n    console.error('Error sending email:', error);\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      }),\n      {\n        status: 500,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      }\n    );\n  }\n}\n\nexport default {\n  async fetch(request: Request, env: Env): Promise<Response> {\n    const url = new URL(request.url);\n\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        status: 200,\n        headers: corsHeaders,\n      });\n    }\n\n    if (url.pathname === '/api/contact' && request.method === 'POST') {\n      try {\n        const data: ContactFormData = await request.json();\n        return await handleContactSubmission(data, env);\n      } catch (error) {\n        console.error('Error processing contact form:', error);\n        return new Response(\n          JSON.stringify({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error occurred',\n          }),\n          {\n            status: 500,\n            headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n          }\n        );\n      }\n    }\n\n    return env.ASSETS.fetch(request);\n  },\n};\n"],
  "mappings": "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",
  "names": ["__defProp"]
}
